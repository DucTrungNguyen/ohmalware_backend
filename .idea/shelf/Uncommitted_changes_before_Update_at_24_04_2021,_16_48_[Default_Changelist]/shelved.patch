Index: helper.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Author: Duc Trung Nguyen\n# Created: 09/04/2021\n# Project: ohmalware_backend\n\nimport store\n\n\ndef read_struct_future():\n    with open('modules/reverse/info/struct_futures.txt', 'r') as f:\n        data = f.read()\n        return data.replace(' ', '').replace('\"', '').split(',').append([0, 0, 0])\n\n    # print(f'{store.struct_future}')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper.py b/helper.py
--- a/helper.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/helper.py	(date 1619257461438)
@@ -8,6 +8,6 @@
 def read_struct_future():
     with open('modules/reverse/info/struct_futures.txt', 'r') as f:
         data = f.read()
-        return data.replace(' ', '').replace('"', '').split(',').append([0, 0, 0])
+        return data.replace(' ', '').replace('"', '').split(',')
 
     # print(f'{store.struct_future}')
Index: modules/reverse/reverse.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># kmadetect\n# By Nguyen Trung\nimport collections\nimport hashlib\nimport store\nimport os, json\n# from os import  path,\nfrom modules.androguard.core.bytecodes.apk import APK\nfrom collections import Counter\n\n# define constant\nfrom modules.reverse.aux_functions import load_file\nfrom modules.reverse.features_managment import read_strings_and_apicalls, check_for_intents, intents_analysis\n\nBASE = os.path.dirname(os.path.abspath(__file__))\nprint(BASE)\nTEMP = os.path.join(BASE, 'templeApks/')\n\nAPI_PACKAGES_LIST = []\nAPI_CLASSES_LIST = []\n\npackage_index_file = os.path.join(BASE, 'info/package_index.txt')\n# print(package_index_file)\nclasses_index_file = os.path.join(BASE, 'info/class_index.txt')\nsystem_commands_file = os.path.join(BASE, 'info/system_commands.txt')\noutput_folder = 'JsonData/'\nlabels = os.path.join(BASE, 'resources/all.labels')\nconfig_file = '/config.json'\nLabelsNum_file = os.path.join(BASE, 'resources/LabelsNum.json')\nDataCSVClient = os.path.join(BASE, 'DataCSV_Client/')\nLABELSNUMANDTEXT = collections.OrderedDict()\nmaxLabelsNum = 0\nPOSSIBLE_DYNAMIC_FILES_EXTENSIONS = [\".csv\", \".json\", \".txt\"]\n\n\ndef reverse(nameApk):\n    # Load Android API packages and classes\n    global API_PACKAGES_LIST, API_CLASSES_LIST, API_SYSTEM_COMMANDS\n\n    ############################################################\n    # READING PACKAGES, CLASSES AND SYSTEM COMMANDS\n    ############################################################\n    package_file = load_file(str(package_index_file))\n    API_PACKAGES_LIST = [x.strip() for x in package_file]\n\n    class_file = load_file(str(classes_index_file))\n    API_CLASSES_LIST = [x.strip() for x in class_file]\n\n    commands_file = load_file(str(system_commands_file))\n    API_SYSTEM_COMMANDS = [x.strip() for x in commands_file]\n    static_analysis_dict = collections.OrderedDict()\n    try:\n\n        analyze_apk = os.path.join(TEMP, nameApk)\n        # Getting the name of the folder that contains all apks and folders with apks\n        base_folder = TEMP.split(\"/\")[-1]\n\n        apk_filename = os.path.join(base_folder, analyze_apk.replace(TEMP, ''))\n        apk_filename = apk_filename.replace(\"//\", \"/\")\n\n        apk_name_no_extensions = \"\".join(apk_filename.split(\"/\")[-1].split(\".\")[:-1])\n\n        # export to monggoDB\n        # if os.path.isfile(join_dir(output_folder, apk_filename.split(\"/\")[-1].replace('.apk', '-analysis.json'))):\n        #    database[apk_filename.replace('.apk', '')] = json.load(\n        #        open(join_dir(output_folder, apk_filename.split(\"/\")[-1].\n        #                      replace('.apk', '-analysis.json'))))\n        #    continue\n\n        pre_static_dict = collections.OrderedDict()\n\n        pre_static_dict['Filename'] = apk_filename\n\n        hasher_md5 = hashlib.md5()\n        hasher_sha256 = hashlib.sha256()\n        hasher_sha1 = hashlib.sha1()\n        with open(analyze_apk, 'rb') as afile:\n            buf = afile.read()\n            hasher_md5.update(buf)\n            hasher_sha256.update(buf)\n            hasher_sha1.update(buf)\n\n        md5 = hasher_md5.hexdigest()\n        sha256 = hasher_sha256.hexdigest()\n        sha1 = hasher_sha1.hexdigest()\n\n        pre_static_dict[\"md5\"] = md5\n        pre_static_dict[\"sha256\"] = sha256\n        pre_static_dict[\"sha1\"] = sha1\n\n        \"\"\"\n        if label is not None:\n            pre_static_dict[\"Label\"] = label\n        else:\n            pre_static_dict[\"Label\"] = \"/\".join(apk_filename.split(\"/\")[:-1])\n        \"\"\"\n        pre_static_dict[\"VT_positives\"] = None\n        apk_Oject = APK(analyze_apk)\n\n        # get package name\n        static_analysis_dict['Package_name'] = apk_Oject.get_package()\n\n        # get Permission\n        static_analysis_dict['Permissions'] = apk_Oject.get_permissions()\n\n        # Activities\n        try:\n            list_activities = apk_Oject.get_activities()\n        except UnicodeEncodeError:\n            list_activities = []\n\n        # get Main ACtivity\n        static_analysis_dict['Main_activity'] = apk_Oject.get_main_activity()\n\n        # Receivers\n        try:\n            list_receivers = apk_Oject.get_receivers()\n        except UnicodeEncodeError:\n            list_receivers = []\n\n        # Services\n        try:\n            list_services = apk_Oject.get_services()\n        except UnicodeEncodeError:\n            list_services = []\n\n        # API calls and Strings\n        list_smali_api_calls, list_smali_strings = read_strings_and_apicalls(analyze_apk, API_PACKAGES_LIST,\n                                                                             API_CLASSES_LIST)\n        for api_call in list_smali_api_calls.keys():\n            new_api_call = '.'.join(api_call.split(\".\")[:-1])\n            if new_api_call in list_smali_api_calls.keys():\n                list_smali_api_calls[new_api_call] = list_smali_api_calls[new_api_call] + list_smali_api_calls[\n                    api_call]\n            else:\n                list_smali_api_calls[new_api_call] = list_smali_api_calls[api_call]\n                del list_smali_api_calls[api_call]\n        static_analysis_dict['API_calls'] = list_smali_api_calls\n        static_analysis_dict['Strings'] = Counter(filter(None, list_smali_strings))\n\n        # API packages\n\n        API_packages_dict = collections.OrderedDict()\n        android_list_packages_lenghts = [len(x.split(\".\")) for x in API_PACKAGES_LIST]\n\n        list_api_calls_keys = list_smali_api_calls.keys()\n        for api_call in list_api_calls_keys:\n            score = 0\n            package_chosen = None\n            for i, package in enumerate(API_PACKAGES_LIST):\n                len_package = android_list_packages_lenghts[i]\n                if api_call.startswith(package) and len_package > score:\n                    score = len_package\n                    package_chosen = package\n            if package_chosen is not None:\n                if not package_chosen in API_packages_dict.keys():\n                    API_packages_dict[package_chosen] = list_smali_api_calls[api_call]\n                else:\n                    API_packages_dict[package_chosen] += list_smali_api_calls[api_call]\n\n        static_analysis_dict['API_packages'] = API_packages_dict\n\n        # Intents\n        try:\n            static_analysis_dict['Intents'] = intents_analysis(os.path.join(analyze_apk.replace('.apk', ''),\n                                                                            'AndroidManifest.xml'))\n        except:\n            static_analysis_dict['Intents'] = {'Failed to extract intents': 0}\n\n        # Intents of activities\n        intents_activities = collections.OrderedDict()\n        for activity in list_activities:\n            intents_activities[activity] = check_for_intents(os.path.join(analyze_apk.replace('.apk', ''),\n                                                                          'AndroidManifest.xml'),\n                                                             activity, 'activity')\n        static_analysis_dict['Activities'] = intents_activities\n\n        # Intents of services\n        intents_services = collections.OrderedDict()\n        for service in list_services:\n            intents_services[service] = check_for_intents(os.path.join(analyze_apk.replace('.apk', ''),\n                                                                       'AndroidManifest.xml'),\n                                                          service, 'service')\n        static_analysis_dict['Services'] = intents_services\n\n        # Intents of receivers\n        intents_receivers = collections.OrderedDict()\n        for intent in list_receivers:\n            intents_receivers[intent] = check_for_intents(os.path.join(analyze_apk.replace('.apk', '/'),\n                                                                       'AndroidManifest.xml'),\n                                                          intent, 'receiver')\n        static_analysis_dict['Receivers'] = intents_receivers\n\n        apk_total_analysis = collections.OrderedDict([(\"Pre_static_analysis\", pre_static_dict),\n                                                      (\"Static_analysis\", static_analysis_dict)])\n        #\n        # save_as_json(apk_total_analysis, output_name=join_dir(output_folder, apk_name_no_extensions +\n        #                                                       \"-analysis.json\"))\n\n        row = standardData(pre_static_dict, static_analysis_dict)\n        print(row)\n        return md5, apk_total_analysis, row\n\n\n    except Exception as e:\n        print('Exception: ', e)\n        return 'Error', 'No features'\n\n\ndef standardData(pre_static_dict, static_analysis_dict):\n    features = []\n\n    permission = getPermissions(static_analysis_dict['Permissions'], features=features)\n    api_call = getAPICalls(static_analysis_dict['API_calls'], features=features)\n\n    features.extend(permission)\n    features.extend(api_call)\n\n    final_features = []\n    print(len(store.struct_features))\n    for i in range(0, len(store.struct_features)):\n        if store.struct_features[i] in features:\n            final_features.append(1)\n        else:\n            final_features.append(0)\n\n    return final_features.extend((1834 - len(final_features)) * [0])\n\n\ndef getPermissions(static_analysis_dict, features):\n    return [permisson.split('.')[-1] for permisson in static_analysis_dict]\n\n\ndef getAPICalls(static_analysis_dict, features):\n    return [api_call.replace(' ', '') for api_call in static_analysis_dict]\n\n\nif __name__ == '__main__':\n    reverse('e65abc856458f0c8b34308b9358884512f28bea31fc6e326f6c1078058c05fb9.apk')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/reverse.py b/modules/reverse/reverse.py
--- a/modules/reverse/reverse.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/modules/reverse/reverse.py	(date 1619257461439)
@@ -10,7 +10,7 @@
 
 # define constant
 from modules.reverse.aux_functions import load_file
-from modules.reverse.features_managment import read_strings_and_apicalls, check_for_intents, intents_analysis
+from modules.reverse.features_managment import read_strings_and_apicalls, check_for_intents, intents_analysis, cleanup
 
 BASE = os.path.dirname(os.path.abspath(__file__))
 print(BASE)
@@ -197,8 +197,10 @@
         # save_as_json(apk_total_analysis, output_name=join_dir(output_folder, apk_name_no_extensions +
         #                                                       "-analysis.json"))
 
+        print(' vao day')
         row = standardData(pre_static_dict, static_analysis_dict)
-        print(row)
+        print(len(row))
+        cleanup(nameApk)
         return md5, apk_total_analysis, row
 
 
@@ -223,8 +225,15 @@
             final_features.append(1)
         else:
             final_features.append(0)
+    final_features.append(0)
+    final_features.append(0)
+    final_features.append(0)
+    final_features.append(0)
+    final_features.append(0)
 
-    return final_features.extend((1834 - len(final_features)) * [0])
+    print(f' vao day {len(final_features)}')
+
+    return final_features
 
 
 def getPermissions(static_analysis_dict, features):
@@ -232,7 +241,13 @@
 
 
 def getAPICalls(static_analysis_dict, features):
-    return [api_call.replace(' ', '') for api_call in static_analysis_dict]
+    api_call = []
+    for key, value in static_analysis_dict.items():
+        api_call.append(key.replace(' ', ''))
+
+    # return [api_call.replace(' ', '') for api_call in static_analysis_dict]
+
+    return api_call
 
 
 if __name__ == '__main__':
Index: modules/detect/detect_wide_deep.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Author: Duc Trung Nguyen\n# Created: 11/04/2021\n# Project: ohmalware_backend\nimport store\nimport numpy as np\nfrom sklearn.metrics import classification_report\n\n\ndef detect_single_app(final_futures):\n    x_test_deep = final_futures[:1024]\n    x_test_wide = final_futures[1024:]\n    test_logit = store.model_wide_deep.predict([x_test_wide, x_test_deep.reshape(x_test_deep.shape[0], 32, 32, 1)])\n    y_pred = np.argmax(test_logit, axis=-1)\n    # report = classification_report(y_test, y_pred, output_dict=True)\n    # report = classification_report(y_test, y_pred)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/detect/detect_wide_deep.py b/modules/detect/detect_wide_deep.py
--- a/modules/detect/detect_wide_deep.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/modules/detect/detect_wide_deep.py	(date 1619257667328)
@@ -7,9 +7,11 @@
 
 
 def detect_single_app(final_futures):
-    x_test_deep = final_futures[:1024]
-    x_test_wide = final_futures[1024:]
-    test_logit = store.model_wide_deep.predict([x_test_wide, x_test_deep.reshape(x_test_deep.shape[0], 32, 32, 1)])
-    y_pred = np.argmax(test_logit, axis=-1)
-    # report = classification_report(y_test, y_pred, output_dict=True)
-    # report = classification_report(y_test, y_pred)
\ No newline at end of file
+    x_test_deep = np.array(final_futures[:1024])
+    x_test_wide = np.array(final_futures[1024:])
+
+    test_logit = store.model_wide_deep.predict([x_test_wide.reshape(1, 811), x_test_deep.reshape(1, 32, 32, 1)])
+
+    test_logit = np.argmax(test_logit, axis=1)
+    return test_logit
+    # print(test_logit)
\ No newline at end of file
Index: modules/reverse/features_managment.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\nimport shutil\nimport json\nimport fnmatch\nimport subprocess\n\nimport re, os\nimport lxml.etree as et\n\nfrom collections import Counter\nfrom modules.androguard.core.bytecodes import dvm\n\n\ndef opcodes_analysis(androguard_apk):\n    # http://blog.k3170makan.com/2014/11/automated-dex-decompilation-using.html\n    temp = {}\n\n    dalvik = dvm.DalvikVMFormat(androguard_apk.get_dex())\n    for current_class in dalvik.get_classes():\n        for method in current_class.get_methods():\n            byte_code = method.get_code()\n            if byte_code is not None:\n                byte_code = byte_code.get_bc()\n                for inst in byte_code.get_instructions():\n                    inst_name = inst.get_name()\n                    if inst_name not in temp:\n                        temp[inst_name] = 1\n                    else:\n                        temp[inst_name] += 1\n    return temp\n\n\ndef check_for_intents(manifest, name, mode):\n    intent_results = []\n\n    if not os.path.isfile(manifest) or os.stat(manifest).st_size == 0:\n        return ['']\n\n    tree = et.parse(manifest)\n    root = tree.getroot()\n    for child in root:\n        child.find('application')\n        for x in child.iter(mode):\n            if any(name.endswith(t) for t in x.attrib.values()):\n                for y in x:\n                    if 'intent-filter' in y.tag:\n                        for z in y:\n                            if 'action' in z.tag:\n                                intent_results.append(''.join(z.attrib.values()))\n    return list(set(intent_results))\n\n\ndef intents_analysis(manifest):\n    intent_results = []\n\n    tree = et.parse(manifest)\n    root = tree.getroot()\n    for child in root:\n        child.find('application')\n        for x in child.iter('activity'):\n            for y in x:\n                if 'intent-filter' in y.tag:\n                    for z in y:\n                        if 'action' in z.tag:\n                            intent_results.append(''.join(z.attrib.values()))\n        for x in child.iter('service'):\n            for y in x:\n                if 'intent-filter' in y.tag:\n                    for z in y:\n                        if 'action' in z.tag:\n                            intent_results.append(''.join(z.attrib.values()))\n        for x in child.iter('receiver'):\n            for y in x:\n                if 'intent-filter' in y.tag:\n                    for z in y:\n                        if 'action' in z.tag:\n                            intent_results.append(''.join(z.attrib.values()))\n    return Counter(intent_results)\n\n\ndef read_smali_files(smali_list, api_packages_list, api_classes_list):\n    list_smali_api_calls = {}\n    list_smali_strings = []\n    for smali_file in smali_list:\n        with open(smali_file) as f:\n            content = f.readlines()\n        content = [x.strip() for x in content]\n\n        # SEARCHING STRINGS\n        splitted_string = [x.split() for x in content if 'const-string' in x]\n        acum = []\n        for elem in splitted_string:\n            elem = elem[2:]\n            acum.append(' '.join(elem).replace('\\\"', '').strip())\n        list_smali_strings.extend(acum)\n\n        # SEARCHING FOR API CALLS\n        content = [x for x in content if 'invoke-' in x or 'invoke-virtual' in x or 'invoke-direct' in x]\n\n        for elem in content:\n            # elem = elem.split('->')\n            elem = re.sub(\"\\{[^]]*\\}\", lambda x: x.group(0).replace(',', ''),\n                          elem)  # Remove commands between brackets (invoke)\n\n            elem = re.split(', |;->', elem)\n\n            if len(elem) != 2:\n                # TODO CHECK IF CORRECT. Class not defined, so it must came from Object, but should be checked\n                try:\n                    package = elem[1]\n                    method = elem[2]\n                except IndexError:\n                    print(\"Incorrect API calls transcription\")\n\n            else:\n                package = \"Object\"\n                method = elem[1]\n            if package.startswith(\"L\"):\n                package = package[1:]\n\n            package = package.split(\"/\")\n            _class = package[-1]\n            del package[-1]\n            package = '.'.join(package)\n            method = method.split('(')[0]\n\n            if package in api_packages_list and _class in api_classes_list and method != '<init>':\n                pack_class = package + '.' + _class + '.' + method\n                if pack_class in list_smali_api_calls:\n                    list_smali_api_calls[pack_class] += 1\n                else:\n                    list_smali_api_calls[pack_class] = 1\n\n    return list_smali_api_calls, list_smali_strings\n\n\ndef read_strings_and_apicalls(analyze_apk, api_packages_list, api_classes_list):\n    unzip_apk(analyze_apk)\n\n    smali_files_list = list_files(analyze_apk.replace('.apk', '/'), '*.smali')\n\n    list_smali_api_calls, list_smali_strings = read_smali_files(smali_files_list, api_packages_list, api_classes_list)\n\n    return list_smali_api_calls, list_smali_strings\n\n\ndef read_system_commands(list_smali_strings, api_system_commands):\n    # System commands\n    list_system_commands = []\n    for elem in filter(None, list_smali_strings):\n        command_to_check_list = elem.split(' ')\n        if command_to_check_list[0] in api_system_commands:\n            list_system_commands.append(command_to_check_list[0])\n\n    return list_system_commands\n\n\n\ndef list_files(directory, string):\n    result = []\n    for dirpath, dirnames, files in os.walk(directory):\n        for file in fnmatch.filter(files, string):\n            result.append(os.path.join(dirpath, file))\n    return result\n\n\ndef unzip_apk(analyze_apk):\n    # directory = source_directory + os.path.basename(filename).replace('.apk', '')\n    directory = analyze_apk.replace('.apk', '/')\n    if not os.path.exists(directory):\n        command = \"java -jar Libraries/apktool.jar d \" + analyze_apk + \" -o \" + directory + \" -f\"\n\n        p = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n        output, err = p.communicate()\n\n\ndef cleanup(analyze_apk):\n    # directory = source_directory + os.path.basename(filename).replace('.apk', '')\n    directory = analyze_apk.replace('.apk', '/')\n    shutil.rmtree(directory)\n\n\ndef save_as_json(data, output_name):\n    with open(str(output_name), 'w') as fp:\n        json.dump(data, fp, indent=4)\n    # print '[*] Analysis saved into:', str(output_name)\n\ndef delAPk(nameApk):\n\n    # pathApk = 'templeApks/' + nameApk\n    os.remove(nameApk)\n    # cleanup(pathApk)\n\ndef save_as_csv(data):\n    # TODO\n    return 0\n\n\ndef load_file(filename):\n    with open(filename, 'r') as text_file:\n        lines = text_file.readlines()\n    return lines\n\ndef load_NameandLabels(fileAllLabels):\n    arrName = []\n    arrLabels = []\n    with open(fileAllLabels, 'r') as text_file:\n        lines = text_file.readlines()\n        for line in lines:\n            a = line.split('\\t')\n            arrName.append(a[0])\n            arrLabels.append(a[1].split('\\n')[0])\n\n    return arrName, arrLabels\n\ndef check_overloaded_methods(dic):\n    # not used\n    for key, value in dic.iteritems():\n        if len(dic[key].keys()) > 1:\n            print('\\nOVERCHARGED!!!\\n')\n\n\ndef load_from_json(name):\n    if os.path.isfile(name):\n        with open(name, 'r') as fp:\n            data = json.load(fp)\n        return data\n    else:\n        return ['Not available']\n\n\n\ndef checkMerge(pathDataCSV_Cient, mergeCSV):\n    list_dataCSV_Client = list_files(pathDataCSV_Cient, '*.csv')\n    if len(list_dataCSV_Client) >= mergeCSV:\n        return True\n    return False
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/features_managment.py b/modules/reverse/features_managment.py
--- a/modules/reverse/features_managment.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/modules/reverse/features_managment.py	(date 1619257489651)
@@ -9,6 +9,9 @@
 
 from collections import Counter
 from modules.androguard.core.bytecodes import dvm
+import shlex
+BASE = os.path.dirname(os.path.abspath(__file__))
+
 
 
 def opcodes_analysis(androguard_apk):
@@ -168,12 +171,14 @@
     # directory = source_directory + os.path.basename(filename).replace('.apk', '')
     directory = analyze_apk.replace('.apk', '/')
     if not os.path.exists(directory):
-        command = "java -jar Libraries/apktool.jar d " + analyze_apk + " -o " + directory + " -f"
+        command = f"java -jar {os.path.join(BASE, 'Libraries/apktool.jar')} d " + analyze_apk + " -o " + directory + " -f"
 
+        # subprocess.Popen(shlex.split('open ....'))
         p = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
         output, err = p.communicate()
 
 
+
 def cleanup(analyze_apk):
     # directory = source_directory + os.path.basename(filename).replace('.apk', '')
     directory = analyze_apk.replace('.apk', '/')
@@ -185,10 +190,11 @@
         json.dump(data, fp, indent=4)
     # print '[*] Analysis saved into:', str(output_name)
 
-def delAPk(nameApk):
+# def delAPk(nameApk):
+
 
     # pathApk = 'templeApks/' + nameApk
-    os.remove(nameApk)
+    # os.remove(nameApk)
     # cleanup(pathApk)
 
 def save_as_csv(data):
@@ -234,4 +240,9 @@
     list_dataCSV_Client = list_files(pathDataCSV_Cient, '*.csv')
     if len(list_dataCSV_Client) >= mergeCSV:
         return True
-    return False
\ No newline at end of file
+    return False
+
+#
+#
+# if __name__ == '__main__':
+#
\ No newline at end of file
Index: modules/detect/Train.py
===================================================================
diff --git a/modules/detect/Train.py b/modules/detect/Train.py
deleted file mode 100644
--- a/modules/detect/Train.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ /dev/null	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
@@ -1,133 +0,0 @@
-#kmadetect
-#By Nguyen Trung
-
-import os
-import fnmatch
-import json
-
-from detect import Test as test
-from tqdm import tqdm
-
-PATH_CONFIG = '../reverse/config.json'
-PATH_DATACSV_CLIENT = 'reverse/DataCSV_Client'
-PATH_CONFIGCNNs = 'detect/configCNNs.json'
-PATH_DATACSV = '../reverse/DataCSV'
-
-
-
-def trainModel():
-    # doc file configCNNs
-    with open(PATH_CONFIGCNNs, "r+") as f:
-        dataConfigCNNs = json.load(f)
-
-    BATCH_SIZE = dataConfigCNNs["BATCH_SIZE"]
-    IMG_SIZE = dataConfigCNNs["IMG_SIZE"]
-    N_CLASSES = dataConfigCNNs["N_CLASSES"]
-    LR = dataConfigCNNs["LR"]
-    N_EPOCHS = dataConfigCNNs["N_EPOCHS"]
-
-    # doc configRevere
-    with open(PATH_CONFIG, "r+") as fp:
-        dataConfig = json.load(fp)
-    partTrained = dataConfig["partTrained"]
-
-    isTrain = True
-
-    csv_list = list_files(PATH_DATACSV, "*.csv")
-
-    for dataCSV in tqdm(csv_list):
-        if isTrain:
-            test.train(dataCSV,
-                  BATCH_SIZE=BATCH_SIZE,
-                  IMG_SIZE=IMG_SIZE,
-                  N_CLASSES=N_CLASSES,
-                  N_EPOCHS=N_EPOCHS)
-            isTrain = False
-        else:
-            test.tranfer(dataCSV,
-                    BATCH_SIZE=BATCH_SIZE,
-                    IMG_SIZE=IMG_SIZE,
-                    N_CLASSES=N_CLASSES,
-                    N_EPOCHS=N_EPOCHS)
-        partTrained += 1
-
-    dataConfig["partTrained"] = partTrained
-    with open(str(PATH_CONFIG), 'w+') as fp:
-        json.dump(dataConfig, fp, indent=4)
-
-    fp.close()
-
-def tranferModel():
-
-    # doc file config
-    with open(PATH_CONFIGCNNs, "r+") as f:
-        dataConfigCNNs = json.load(f)
-
-
-    BATCH_SIZE = dataConfigCNNs["BATCH_SIZE"]
-    IMG_SIZE = dataConfigCNNs["IMG_SIZE"]
-    N_CLASSES = dataConfigCNNs["N_CLASSES"]
-    LR = dataConfigCNNs["LR"]
-    N_EPOCHS = dataConfigCNNs["N_EPOCHS"]
-
-    # doc configRevere
-    with open(PATH_CONFIG, "r+") as fp:
-        dataConfig = json.load(fp)
-    partTrained = dataConfig["partTrained"]
-
-
-
-    csv_list = list_files(PATH_DATACSV, "*.csv")
-
-    for dataCSV in tqdm(csv_list):
-            head, tail = os.path.split(dataCSV)
-            part = int(tail[0:1])
-            if part > partTrained - 1:
-                test.tranfer(dataCSV,
-                        BATCH_SIZE=BATCH_SIZE,
-                        IMG_SIZE=IMG_SIZE,
-                        N_CLASSES=N_CLASSES,
-                        N_EPOCHS=N_EPOCHS)
-                partTrained += 1
-
-    dataConfig["partTrained"] = partTrained
-    with open(str(PATH_CONFIG), 'w+') as fp:
-        json.dump(dataConfig, fp, indent=4)
-
-    fp.close()
-
-def detectApk(nameApk):
-
-    pathApkCSV = os.path.join(PATH_DATACSV_CLIENT, nameApk+ '.csv')
-
-    # doc file config
-    with open(PATH_CONFIGCNNs, "r+") as f:
-        dataConfigCNNs = json.load(f)
-
-    BATCH_SIZE = dataConfigCNNs["BATCH_SIZE"]
-    IMG_SIZE = dataConfigCNNs["IMG_SIZE"]
-    N_CLASSES = dataConfigCNNs["N_CLASSES"]
-    LR = dataConfigCNNs["LR"]
-    N_EPOCHS = dataConfigCNNs["N_EPOCHS"]
-
-
-
-    predictjson = test.detect(pathApkCSV,
-            BATCH_SIZE=BATCH_SIZE,
-            IMG_SIZE=IMG_SIZE,
-            N_CLASSES=N_CLASSES,
-            N_EPOCHS=N_EPOCHS)
-    print(predictjson)
-    return predictjson
-
-def list_files(directory, string):
-    result = []
-    for dirpath, dirnames, files in os.walk(directory):
-        for file in fnmatch.filter(files, string):
-            result.append(os.path.join(dirpath, file))
-    return result
-
-
-if __name__ == '__main__':
-    trainModel()
-    # detectApk('d80e4f88ed36dde12da1863794ea143bcf53eaae22e511e3eb7402cef5224d4d.csv')
Index: modules/detect/test.py
===================================================================
diff --git a/modules/detect/test.py b/modules/detect/test.py
deleted file mode 100644
--- a/modules/detect/test.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ /dev/null	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
@@ -1,15 +0,0 @@
-
-import os
-import json
-import fnmatch
-
-PATH_CONFIG = '../reverse/config.json'
-
-BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
-
-MEDIA_ROOT = os.path.join(BASE_DIR, '../reverse/tempApks')
-
-
-
-fnmatch.filter('ads', '.csv')
-x = 2
\ No newline at end of file
Index: modules/detect/ModelHandle.py
===================================================================
diff --git a/modules/detect/ModelHandle.py b/modules/detect/ModelHandle.py
deleted file mode 100644
--- a/modules/detect/ModelHandle.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ /dev/null	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
@@ -1,98 +0,0 @@
-#kmadetect
-#By Mai Nghia
-
-import tensorflow as tf
-import tflearn
-from tflearn.layers.conv import conv_2d, max_pool_2d
-from tflearn.layers.core import input_data, dropout, fully_connected
-from tflearn.layers import regression
-import numpy as np
-
-PATH = "file path"
-
-
-def builtModel(N_CLASSES, IMG_SIZE):
-    tf.reset_default_graph()
-    network = input_data(
-        shape=[None, IMG_SIZE, IMG_SIZE, 1])  # 1   #ĐIền 1 nếu là ảnh đen trắng, 3 nếu là ảnh màu ở thông số cuối cùng.
-
-    network = conv_2d(network, 32, 3, activation='relu')  # 2
-    network = max_pool_2d(network, 2)  # 3
-
-    network = conv_2d(network, 64, 3, activation='relu')
-    network = max_pool_2d(network, 2)
-
-    network = conv_2d(network, 32, 3, activation='relu')
-    network = max_pool_2d(network, 2)
-
-    network = conv_2d(network, 64, 3, activation='relu')
-    network = max_pool_2d(network, 2)
-
-    network = conv_2d(network, 32, 3, activation='relu')
-    network = max_pool_2d(network, 2)
-
-    network = conv_2d(network, 64, 3, activation='relu')
-    network = max_pool_2d(network, 2)
-
-    network = fully_connected(network, 1024, activation='relu')  # 4
-    network = dropout(network, 0.8)  # 5
-
-    network = fully_connected(network, N_CLASSES, activation='softmax')  # 6
-    network = regression(network)
-
-    model = tflearn.DNN(network)
-
-    return model
-
-
-def train(model, train_data, train_label, val_data, val_label, N_EPOCHS, pathModel):
-    model.fit(train_data, train_label, n_epoch=N_EPOCHS, validation_set=(val_data, val_label), show_metric=True)
-    model.save(pathModel)
-
-    return model
-
-
-def tranferModel(model, train_data, train_label, val_data, val_label, N_EPOCHS, pathModel):
-    model.load(pathModel)
-    model.fit(train_data, train_label, n_epoch=N_EPOCHS, validation_set=(val_data, val_label), show_metric=True)
-    model.save(pathModel)
-
-    return model
-
-
-
-def predict(model, test_data, pathModel, threshold):
-    # if the probability of the sample is greater than or equal to the 'threshold' then the status will be 'true' otherwise it is 'capably'
-    result_predict = {}
-    result_predict["result"] = []
-    model.load(pathModel)
-    test_logits = model.predict(test_data)
-    for i in range(len(test_logits)):
-        label_max = np.argmax(test_logits, axis=-1)[i]
-        probability_max = test_logits[i][label_max]
-        if (float(threshold) <= probability_max):
-            status = "true"
-        else:
-            status = "capably"
-        result_predict["result"].append(
-            {
-                "pattern": i,
-                "label": label_max,
-                "name_label": "",
-                "probability": probability_max,
-                "status": status
-
-            }
-        )
-
-    print(result_predict["result"][0])
-    return result_predict["result"][0]
-# def predict(model, test_data, pathModel):
-#     model.load(pathModel)
-#     test_logits = model.predict(test_data)
-#
-#     test_logits = np.argmax(test_logits, axis=-1)
-#
-#     return test_logits
-
-
Index: modules/detect/configCNNs.json
===================================================================
diff --git a/modules/detect/configCNNs.json b/modules/detect/configCNNs.json
deleted file mode 100644
--- a/modules/detect/configCNNs.json	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ /dev/null	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
@@ -1,8 +0,0 @@
-{
-
-    "BATCH_SIZE" : 32,
-    "IMG_SIZE" : 72,
-    "N_CLASSES" : 670,
-    "LR" : 0.001,
-    "N_EPOCHS" : 50
-}
\ No newline at end of file
Index: modules/detect/DataHandle.py
===================================================================
diff --git a/modules/detect/DataHandle.py b/modules/detect/DataHandle.py
deleted file mode 100644
--- a/modules/detect/DataHandle.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ /dev/null	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
@@ -1,46 +0,0 @@
-#kmadetect
-#By Mai Nghia
-
-import numpy as np
-import pandas as pd
-import random
-from tflearn.data_utils import to_categorical
-from detect.Data import *
-
-
-def readFileCsv(path):
-    data = pd.read_csv(path, header=None)
-    return data
-
-def standardizedData(data, IMG_SIZE, N_CLASSES, rowData):
-
-    data = np.array(data, dtype='float32')
-    train_data = data[:, 1:]
-    train_label = data[:, 0]
-    shuffle_order = list(range(rowData))
-    random.shuffle(shuffle_order)
-    train_data = np.array(train_data)
-    train_label = np.array(train_label)
-
-    train_data = train_data[shuffle_order]
-    train_y = train_label[shuffle_order]
-
-    train_data = train_data.reshape(-1, IMG_SIZE, IMG_SIZE, 1)
-    train_label = to_categorical(train_y, N_CLASSES)
-
-    return Data(train_data, train_label)
-
-def standardizedDataTest(data, IMG_SIZE, N_CLASSES, rowData):
-    dataTest = np.array(data, dtype='float32')
-    dataTest = dataTest.reshape(-1, IMG_SIZE, IMG_SIZE, 1)
-
-    return dataTest
-
-def raito(numsRow):
-    _train = 0.8
-    _val = 0.1
-    _test = 0.1
-    train = int(round(numsRow * 0.8, 0))
-    test = val = int(round(numsRow * 0.9, 0))
-    return train, val, test
-
Index: modules/detect/Data.py
===================================================================
diff --git a/modules/detect/Data.py b/modules/detect/Data.py
deleted file mode 100644
--- a/modules/detect/Data.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ /dev/null	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
@@ -1,14 +0,0 @@
-#kmadetect
-#By Mai Nghia
-
-class Data:
-
-    def __init__(self, dataTrain, dataLabel):
-        self.dataTrain = dataTrain
-        self.dataLabel = dataLabel
-
-    def getDataTrain(self):
-        return self.dataTrain
-
-    def getDataLabel(self):
-        return self.dataLabel
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_12_21__7_56_AM__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21__7_56_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21__7_56_AM__Default_Changelist_.xml
new file mode 100644
--- /dev/null	(date 1619257518709)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21__7_56_AM__Default_Changelist_.xml	(date 1619257518709)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_4_12_21,_7_56_AM_[Default_Changelist]" date="1618189007096" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21,_7_56_AM_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/12/21, 7:56 AM [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: store.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Author: Duc Trung Nguyen\n# Created: 09/04/2021\n# Project: ohmalware_backend\n\nmodel_wide_deep = None\n\nstruct_features = []\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/store.py b/store.py
--- a/store.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/store.py	(date 1619257461453)
@@ -5,3 +5,4 @@
 model_wide_deep = None
 
 struct_features = []
+labels = None
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_12_21,_7_56_AM_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21,_7_56_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21,_7_56_AM_[Default_Changelist]/shelved.patch
new file mode 100644
--- /dev/null	(date 1619257461437)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_4_12_21,_7_56_AM_[Default_Changelist]/shelved.patch	(date 1619257461437)
@@ -0,0 +1,33 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1f268987-d63b-4113-891f-34fe2bc4ed58\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/ohmalware_backend.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/ohmalware_backend.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/helper.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/helper.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"trungdev\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1qQ2jfSOc3iAViVQn3zg6e3WA4Y\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/app/modules\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/modules/reverse/New folder\" />\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/app\" />\n      <recent name=\"$PROJECT_DIR$/app/modules/detect/wide_deep\" />\n      <recent name=\"$PROJECT_DIR$/app/modules/detect\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.main\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"reverse\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/app/modules/reverse\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app/modules/reverse/reverse.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for app.test.test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/app/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;app.test.test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for test.test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test.test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for test.test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test.test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python tests.Unittests for test.test_def.TestDef.test_read_struct_future\" />\n        <item itemvalue=\"Python tests.Unittests for test.test_def.TestDef.test_read_struct_future\" />\n        <item itemvalue=\"Python.reverse\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1f268987-d63b-4113-891f-34fe2bc4ed58\" name=\"Default Changelist\" comment=\"\" />\n      <created>1616997631472</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1616997631472</updated>\n      <workItem from=\"1616997645767\" duration=\"852000\" />\n      <workItem from=\"1617014865991\" duration=\"453000\" />\n      <workItem from=\"1617015421097\" duration=\"69000\" />\n      <workItem from=\"1617015559011\" duration=\"162000\" />\n      <workItem from=\"1617374079906\" duration=\"3000\" />\n      <workItem from=\"1617470421873\" duration=\"1222000\" />\n      <workItem from=\"1617812238733\" duration=\"3799000\" />\n      <workItem from=\"1617896438929\" duration=\"11068000\" />\n      <workItem from=\"1617959793523\" duration=\"4945000\" />\n      <workItem from=\"1617979964933\" duration=\"2086000\" />\n      <workItem from=\"1618028184104\" duration=\"2617000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/main.py</url>\n          <line>15</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/test/test_def.py</url>\n          <line>11</line>\n          <option name=\"timeStamp\" value=\"4\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/ohmalware_backend$reverse.coverage\" NAME=\"reverse Coverage Results\" MODIFIED=\"1617937858567\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app/modules/reverse\" />\n    <SUITE FILE_PATH=\"coverage/ohmalware_backend$Unittests_for_test_def_TestDef_test_read_struct_future.coverage\" NAME=\"Unittests for test_def.TestDef.test_read_struct_future Coverage Results\" MODIFIED=\"1617940204898\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app/test\" />\n  </component>\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 33a56d0a43b2557c7ca0887acfec0f7e6bbcbb8f)
++++ b/.idea/workspace.xml	(date 1618044256216)
+@@ -1,12 +1,7 @@
+ <?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ChangeListManager">
+-    <list default="true" id="1f268987-d63b-4113-891f-34fe2bc4ed58" name="Default Changelist" comment="">
+-      <change beforePath="$PROJECT_DIR$/.idea/ohmalware_backend.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/ohmalware_backend.iml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/helper.py" beforeDir="false" afterPath="$PROJECT_DIR$/helper.py" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+-    </list>
++    <list default="true" id="1f268987-d63b-4113-891f-34fe2bc4ed58" name="Default Changelist" comment="" />
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+@@ -176,7 +171,7 @@
+       <workItem from="1617896438929" duration="11068000" />
+       <workItem from="1617959793523" duration="4945000" />
+       <workItem from="1617979964933" duration="2086000" />
+-      <workItem from="1618028184104" duration="2617000" />
++      <workItem from="1618028184104" duration="2975000" />
+     </task>
+     <servers />
+   </component>
Index: modules/detect/wide_deep/label.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/detect/wide_deep/label.json b/modules/detect/wide_deep/label.json
new file mode 100644
--- /dev/null	(date 1619257461439)
+++ b/modules/detect/wide_deep/label.json	(date 1619257461439)
@@ -0,0 +1,1 @@
+{"1":{"0":"0_apps","1":"AccuTrack","2":"Ackposts","3":"Acnetdoor","4":"Adrd","5":"Adsms","6":"Aks","7":"Ansca","8":"Antares","9":"Anti","10":"Anudow","11":"Arspam","12":"BaseBridge","13":"BeanBot","14":"Bgserv","15":"Biige","16":"Booster","17":"Bosm","18":"Boxer","19":"Cawitt","20":"CellShark","21":"CellSpy","22":"Ceshark","23":"CgFinder","24":"Coogos","25":"Copycat","26":"Cosha","27":"CrWind","28":"Dabom","29":"Dialer","30":"Dogowar","31":"Dougalek","32":"DroidDream","33":"DroidKungFu","34":"DroidRooter","35":"DroidSheep","36":"EICAR-Test-File","37":"EWalls","38":"Exploit.RageCage","39":"ExploitLinuxLotoor","40":"Faceniff","41":"FakeDoc","42":"FakeFlash","43":"FakeInstaller","44":"Fakelogo","45":"FakeNefix","46":"Fakengry","47":"FakePlayer","48":"FakeRun","49":"FakeTimer","50":"Fakeview","51":"FarMap","52":"Fatakr","53":"Fauxcopy","54":"Fidall","55":"FinSpy","56":"Fjcon","57":"Flexispy","58":"FoCobers","59":"Foncy","60":"Fsm","61":"Fujacks","62":"Gamex","63":"Gapev","64":"Gappusin","65":"Gasms","66":"Geinimi","67":"Generic","68":"GGtrack","69":"GinMaster","70":"GlodEagl","71":"Glodream","72":"Gmuse","73":"Gonca","74":"GPSpy","75":"Hamob","76":"Hispo","77":"Iconosys","78":"Imlog","79":"Jifake","80":"JSmsHider","81":"Kidlogger","82":"Kiser","83":"Kmin","84":"Koomer","85":"Ksapp","86":"Lemon","87":"LifeMon","88":"Loicdos","89":"Loozfon","90":"Luckycat","91":"Lypro","92":"Maistealer","93":"Mania","94":"Maxit","95":"MMarketPay","96":"Mobilespy","97":"MobileTx","98":"Mobinauten","99":"Mobsquz","100":"Moghava","101":"MTracker","102":"Nandrobox","103":"Netisend","104":"Nickspy","105":"NickyRCP","106":"Nisev","107":"Nyleaker","108":"Opfake","109":"PdaSpy","110":"Penetho","111":"Pirater","112":"Pirates","113":"PJApps","114":"Placms","115":"Plankton","116":"Proreso","117":"Qicsom","118":"QPlus","119":"Raden","120":"RATC","121":"Replicator","122":"Rooter","123":"RootSmart","124":"RuFraud","125":"SafeKidZone","126":"Saiva","127":"Sakezon","128":"Sdisp","129":"SeaWeth","130":"SendPay","131":"SerBG","132":"SheriDroid","133":"SmForw","134":"SMSBomber","135":"Smspacem","136":"SMSreg","137":"SMSSend","138":"SmsSpy","139":"SmsWatcher","140":"SMSZombie","141":"Sonus","142":"Spitmo","143":"Spy.GoneSixty","144":"Spy.ImLog","145":"SpyBubble","146":"SpyHasb","147":"SpyMob","148":"Spyoo","149":"SpyPhone","150":"Spyset","151":"Ssmsp","152":"Stealer","153":"Stealthcell","154":"Steek","155":"Stiniter","156":"SuBatt","157":"Tapsnake","158":"Tesbo","159":"TheftAware","160":"TigerBot","161":"Trackplus","162":"TrojanSMS.Boxer.AQ","163":"TrojanSMS.Denofow","164":"TrojanSMS.Hippo","165":"TrojanSMS.Stealer","166":"Typstu","167":"Updtbot","168":"UpdtKiller","169":"Vdloader","170":"Vidro","171":"Whapsni","172":"Xsider","173":"YcChar","174":"Yzhc","175":"Zitmo","176":"Zsone"},"2":{"0":0,"1":1,"2":2,"3":3,"4":4,"5":5,"6":6,"7":7,"8":8,"9":9,"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18,"19":19,"20":20,"21":21,"22":22,"23":23,"24":24,"25":25,"26":26,"27":27,"28":28,"29":29,"30":30,"31":31,"32":32,"33":33,"34":34,"35":35,"36":36,"37":37,"38":38,"39":39,"40":40,"41":41,"42":42,"43":43,"44":44,"45":45,"46":46,"47":47,"48":48,"49":49,"50":50,"51":51,"52":52,"53":53,"54":54,"55":55,"56":56,"57":57,"58":58,"59":59,"60":60,"61":61,"62":62,"63":63,"64":64,"65":65,"66":66,"67":67,"68":68,"69":69,"70":70,"71":71,"72":72,"73":73,"74":74,"75":75,"76":76,"77":77,"78":78,"79":79,"80":82,"81":83,"82":84,"83":85,"84":86,"85":87,"86":88,"87":89,"88":90,"89":91,"90":92,"91":93,"92":94,"93":95,"94":96,"95":97,"96":98,"97":99,"98":100,"99":101,"100":102,"101":103,"102":104,"103":105,"104":106,"105":107,"106":108,"107":109,"108":110,"109":111,"110":112,"111":113,"112":114,"113":115,"114":116,"115":117,"116":118,"117":119,"118":120,"119":121,"120":122,"121":124,"122":125,"123":126,"124":127,"125":128,"126":129,"127":130,"128":131,"129":132,"130":133,"131":134,"132":135,"133":136,"134":137,"135":138,"136":139,"137":140,"138":141,"139":142,"140":143,"141":144,"142":145,"143":146,"144":147,"145":148,"146":149,"147":150,"148":151,"149":152,"150":153,"151":154,"152":155,"153":156,"154":157,"155":158,"156":159,"157":160,"158":161,"159":162,"160":163,"161":164,"162":165,"163":166,"164":167,"165":168,"166":169,"167":170,"168":171,"169":172,"170":173,"171":174,"172":175,"173":176,"174":177,"175":178,"176":179}}
\ No newline at end of file
Index: modules/reverse/templeApks/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/templeApks/AndroidManifest.xml b/modules/reverse/templeApks/AndroidManifest.xml
new file mode 100644
--- /dev/null	(date 1619257461439)
+++ b/modules/reverse/templeApks/AndroidManifest.xml	(date 1619257461439)
@@ -0,0 +1,54 @@
+  |    \
+  4           �              4   @   L   Z   t   �   �   �   �       *  >  L  �  �    P  �  �  (  d  �  �    2  F  �  �      4  D  |  �  �    D  |  �  �  (  n  �  .  L  �  �  �  	   v e r s i o n C o d e    v e r s i o n N a m e    n a m e    i c o n    l a b e l    a u t h o r i t i e s    m i m e T y p e    t h e m e    p r i o r i t y    a n d r o i d   * h t t p : / / s c h e m a s . a n d r o i d . c o m / a p k / r e s / a n d r o i d        p a c k a g e    m a n i f e s t    1 . 0 . 0     c o m . x m o b i l e a p p . c o n t a c t _ v e r s i o n 2 1    u s e s - p e r m i s s i o n   ' a n d r o i d . p e r m i s s i o n . C H A N G E _ N E T W O R K _ S T A T E   $ a n d r o i d . p e r m i s s i o n . C H A N G E _ W I F I _ S T A T E   ' a n d r o i d . p e r m i s s i o n . A C C E S S _ N E T W O R K _ S T A T E   $ a n d r o i d . p e r m i s s i o n . A C C E S S _ W I F I _ S T A T E    a n d r o i d . p e r m i s s i o n . I N T E R N E T    a n d r o i d . p e r m i s s i o n . W A K E _ L O C K    a n d r o i d . p e r m i s s i o n . S E N D _ S M S    a n d r o i d . p e r m i s s i o n . R E C E I V E _ S M S    a n d r o i d . p e r m i s s i o n . R E A D _ S M S    a p p l i c a t i o n    p r o v i d e r   1 c o m . x m o b i l e a p p . c o n t a c t _ v e r s i o n 2 1 . C o n t a c t s P r o v i d e r    c o m . x m o b i l e a p p . p r o v i d e r . c o n t a c t    a c t i v i t y    . C o n t a c t   
+ i n t e n t - f i l t e r    a c t i o n    a n d r o i d . i n t e n t . a c t i o n . M A I N    c a t e g o r y     a n d r o i d . i n t e n t . c a t e g o r y . L A U N C H E R    a n d r o i d . i n t e n t . a c t i o n . V I E W    a n d r o i d . i n t e n t . a c t i o n . E D I T    a n d r o i d . i n t e n t . a c t i o n . P I C K    a n d r o i d . i n t e n t . c a t e g o r y . D E F A U L T    d a t a   - v n d . a n d r o i d . c u r s o r . d i r / v n d . x m o b i l e a p p . c o n t a c t   ! a n d r o i d . i n t e n t . a c t i o n . G E T _ C O N T E N T   . v n d . a n d r o i d . c u r s o r . i t e m / v n d . x m o b i l e a p p . c o n t a c t   . c o m . x m o b i l e a p p . c o n t a c t _ v e r s i o n 2 1 . C o n t a c t E d i t o r   
+ C o n t a c t E d i t o r   ' c o m . a n d r o i d . n o t e p a d . a c t i o n . E D I T _ C O N T A C T    a n d r o i d . i n t e n t . a c t i o n . I N S E R T    r e c e i v e r    f i s h . s m s r e c e i v e a n d m a s k   ' a n d r o i d . p r o v i d e r . T e l e p h o n y . S M S _ R E C E I V E D   � ,       &            ����	   
+    `      ��������
+            
+       ����     
+              ����            8      ��������            
+                     ��������    8      ��������            
+                     ��������    8      ��������            
+                     ��������    8      ��������            
+                     ��������    8   	   ��������            
+                  	   ��������    8   
+   ��������            
+                  
+   ��������    8      ��������            
+                     ��������    8      ��������            
+                     ��������    8   
+   ��������            
+                  
+   ��������    L      ��������            
+      ����    
+      ����    L      ��������            
+              
+                     ��������    L      ��������            
+      ����    
+               $      ��������               8      ��������!            
+      "     "          ��������!    8      ��������#            
+      $     $          ��������#          ��������     $      ��������               8      ��������!            
+      %     %          ��������!    8      ��������!            
+      &     &          ��������!    8      ��������!            
+      '     '          ��������!    8      ��������#            
+      (     (          ��������#    8      ��������)            
+      *     *          ��������)          ��������     $       ��������               8   !   ��������!            
+      +     +       !   ��������!    8   "   ��������#            
+      (     (       "   ��������#    8   #   ��������)            
+      ,     ,       #   ��������)       $   ��������        %   ��������    `   (   ��������            
+      ����   
+      .     .   
+      -     -    8   +   ��������             
+      ����    8   ,   ��������!            
+      %     %       ,   ��������!    8   -   ��������!            
+      &     &       -   ��������!    8   .   ��������!            
+      /     /       .   ��������!    8   /   ��������#            
+      (     (       /   ��������#    8   0   ��������)            
+      ,     ,       0   ��������)       1   ��������     $   3   ��������               8   4   ��������!            
+      0     0       4   ��������!    8   5   ��������#            
+      (     (       5   ��������#    8   6   ��������)            
+      *     *       6   ��������)       7   ��������        9   ��������    8   :   ��������1            
+      2     2    8   ;   ��������             
+      ����  �   8   <   ��������!            
+      3     3       <   ��������!       =   ��������        >   ��������1       ?   ��������       @   ��������
+       @   ����	   
+   
\ No newline at end of file
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import aiofiles\nfrom fastapi import FastAPI, UploadFile, File\n# from routers import scan_app\nimport store\nimport helper\n# from ultils.helper import *\nfrom modules.reverse import reverse\n# from modules.reverse import reverse\n# from modules.detect import Train\n\n# from keras.models import Model\nimport keras\n\nfrom ultils.helper import check_extension\n\napp = FastAPI()\n# app.include_router(scan_app.router)\n\n# store.model_wide_deep =\nstore.model_wide_deep = keras.models.load_model('modules/detect/wide_deep/wide_deep.h5')\nstore.struct_features = helper.read_struct_future()\n\ntemplate = 'modules/reverse/templeApks/'\n\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello World\"}\n\n\n@app.put(\"/scan_featured/\", tags=\"scan_featured\")\nasync def scan_app_with_featured():\n    a = 1\n\n\n\n\n@app.post(\"/scan_singlefile/\", tags=\"scan_singlefile\")\nasync def scan_single_app(file: UploadFile = File(...)):\n    try:\n\n        file_name = file.filename\n        print(file_name)\n\n        if file_name.split('.')[-1] != 'apk':\n            return {'status': 401,\n                    'msg': 'PLease send file with extesion is .apk'}\n\n        full_path = template + file_name\n\n        async with aiofiles.open(full_path, 'wb') as out_file:\n            content = await file.read()  # async read\n            await out_file.write(content)\n        print('file name ', file_name)\n\n        # return {'status': 200}\n        name_md5, apk_total_analysis, row = reverse.reverse(file_name)\n        return {'status': 200, 'data': {'apk_total_analysis': apk_total_analysis, 'row': row}}\n\n\n    except Exception as e:\n        print(e)\n        return {'status': 500}\n\n\n@app.post(\"/scan_multi\", tags=\"scan_multi\")\nasync def scan_multi():\n    try:\n        a = 1\n        return {'status': 200}\n    except Exception as e:\n        return {'status': 500}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/main.py	(date 1619257461438)
@@ -5,6 +5,9 @@
 import helper
 # from ultils.helper import *
 from modules.reverse import reverse
+from modules.detect import detect_wide_deep
+from fastapi.middleware.cors import CORSMiddleware
+import json
 # from modules.reverse import reverse
 # from modules.detect import Train
 
@@ -14,10 +17,34 @@
 from ultils.helper import check_extension
 
 app = FastAPI()
-# app.include_router(scan_app.router)
+
+origins = [
+    "http://localhost.tiangolo.com",
+    "https://localhost.tiangolo.com",
+    "http://localhost",
+    "http://localhost:8080",
+]
+
+app.add_middleware(
+    CORSMiddleware,
+    allow_origins=['*'],
+    allow_credentials=True,
+    allow_methods=["*"],
+    allow_headers=["*"],
+)
+
+
+# Opening JSON file
+f = open('modules/detect/wide_deep/label.json')
 
-# store.model_wide_deep =
+# returns JSON object as
+# a dictionary
+store.labels = json.load(f)
+
+f.close()
+
 store.model_wide_deep = keras.models.load_model('modules/detect/wide_deep/wide_deep.h5')
+
 store.struct_features = helper.read_struct_future()
 
 template = 'modules/reverse/templeApks/'
@@ -33,8 +60,6 @@
     a = 1
 
 
-
-
 @app.post("/scan_singlefile/", tags="scan_singlefile")
 async def scan_single_app(file: UploadFile = File(...)):
     try:
@@ -55,8 +80,23 @@
 
         # return {'status': 200}
         name_md5, apk_total_analysis, row = reverse.reverse(file_name)
-        return {'status': 200, 'data': {'apk_total_analysis': apk_total_analysis, 'row': row}}
+
+        result = detect_wide_deep.detect_single_app(row)
+
+        label = result[0]
+        # print(store.labels['2'][str(label)])
+
+        labelNum = store.labels['2'][str(label)]
+        # print(f' this is {labelNum}')
+        labelText = store.labels['1'][str(labelNum)]
 
+        # print(f'label text {labelText}')
+
+        isMalware = True
+        if labelText == '0_apps':
+            isMalware = False
+        return {'status': 200,
+                'data': {'apk_total_analysis': apk_total_analysis, 'isMalware': isMalware, 'type': labelText}}
 
     except Exception as e:
         print(e)
Index: test/test_def.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Author: Duc Trung Nguyen\n# Created: 09/04/2021\n# Project: ohmalware_backend\nimport unittest\n\n\nclass TestDef(unittest.TestCase):\n    def test_read_struct_future(self):\n        with open('../modules/reverse/info/struct_futures.txt', 'r') as f:\n            data = f.read()\n            a = data.replace(' ', '').replace('\"', '').split(',')\n            print(len(a))\n            b = 1\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/test_def.py b/test/test_def.py
--- a/test/test_def.py	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/test/test_def.py	(date 1619257461453)
@@ -2,6 +2,8 @@
 # Created: 09/04/2021
 # Project: ohmalware_backend
 import unittest
+import keras
+import numpy as np
 
 
 class TestDef(unittest.TestCase):
@@ -11,3 +13,23 @@
             a = data.replace(' ', '').replace('"', '').split(',')
             print(len(a))
             b = 1
+
+    def test_read_struct_future(self):
+        model = keras.models.load_model(
+            '/Users/technixo/PycharmProjects/ohmalware_backend/modules/detect/wide_deep/wide_deep.h5')
+
+        feature = 1835 * [0]
+
+        x_test_deep = np.array(feature[:1024])
+        # wide  = feature[1024:]
+        # print(len(wide))
+
+        x_test_wide = np.array(feature[1024:])
+
+        test_logit = model.predict([x_test_wide.reshape(1, 811), x_test_deep.reshape(1, 32, 32, 1)])
+
+        test_logit = np.argmax(test_logit, axis=1)
+        print(test_logit)
+        # print(test_logit)
+        # print('before')
+        # test_logit = np.argmax(test_logit, axis=1)
Index: modules/reverse/templeApks/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/templeApks/META-INF/MANIFEST.MF b/modules/reverse/templeApks/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1619257461440)
+++ b/modules/reverse/templeApks/META-INF/MANIFEST.MF	(date 1619257461440)
@@ -0,0 +1,27 @@
+Manifest-Version: 1.0
+Created-By: 1.0 (Android)
+
+Name: res/layout/contact_editor.xml
+SHA1-Digest: CvAXhKpBMPIs5Z/hJ2ozDjHjneg=
+
+Name: AndroidManifest.xml
+SHA1-Digest: qmkMrbwE6Seb67Lr6IJoKzEWuAE=
+
+Name: res/drawable/icon.png
+SHA1-Digest: 13zaj/p3Xf3Sm8wEkKueZAVgIGY=
+
+Name: res/layout/contact_list_item.xml
+SHA1-Digest: XFxxb0XbYXE1KZSgJNWSxAtyvl8=
+
+Name: res/drawable/bg.gif
+SHA1-Digest: MyJ1JOB7CKtwIXwbZY991uPaTcg=
+
+Name: resources.arsc
+SHA1-Digest: D9Qf3uYEkDQnAKpA7E8FY9edSrA=
+
+Name: classes.dex
+SHA1-Digest: o/w3vuTnhnvBHJ8vjADtsPEb3yw=
+
+Name: res/layout/contact_list.xml
+SHA1-Digest: QoLZiB+pe7ia9gaeUgwx4Rg6Q/w=
+
Index: modules/reverse/templeApks/META-INF/CERT.SF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/templeApks/META-INF/CERT.SF b/modules/reverse/templeApks/META-INF/CERT.SF
new file mode 100644
--- /dev/null	(date 1619257461440)
+++ b/modules/reverse/templeApks/META-INF/CERT.SF	(date 1619257461440)
@@ -0,0 +1,28 @@
+Signature-Version: 1.0
+Created-By: 1.0 (Android)
+SHA1-Digest-Manifest: JLT9P6KV3DF9a7ok7PngB1ug9lg=
+
+Name: res/layout/contact_editor.xml
+SHA1-Digest: Jexjg895YhDbKbhPMjkq+8W7XKI=
+
+Name: AndroidManifest.xml
+SHA1-Digest: TQ1zTA/+/0+QrQGMTtYUg6K7E4k=
+
+Name: res/drawable/icon.png
+SHA1-Digest: BHDnwMgXDvWNBx4LLcIiJbU4SZ8=
+
+Name: res/drawable/bg.gif
+SHA1-Digest: 68B5FWLC9NpGgB7f/8jv+xOd7HY=
+
+Name: res/layout/contact_list_item.xml
+SHA1-Digest: vXPk/HwAWXxvv9lbeJR4nDmRh6A=
+
+Name: resources.arsc
+SHA1-Digest: nTaj4/Mwf1P1Sd2SPw052YFk2Ic=
+
+Name: res/layout/contact_list.xml
+SHA1-Digest: ffKYqgjonspWJzmjpPFcISoDupA=
+
+Name: classes.dex
+SHA1-Digest: D4CDNOKNNaMMe0Sd36D4lSX7E+4=
+
Index: modules/reverse/templeApks/res/layout/contact_list_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/templeApks/res/layout/contact_list_item.xml b/modules/reverse/templeApks/res/layout/contact_list_item.xml
new file mode 100644
--- /dev/null	(date 1619257461442)
+++ b/modules/reverse/templeApks/res/layout/contact_list_item.xml	(date 1619257461442)
@@ -0,0 +1,35 @@
+  �    �             T              6   T   \   r   �   �   �   �   �   4  8  T   o r i e n t a t i o n    l a y o u t _ w i d t h   
+ l a y o u t _ h e i g h t    i d   	 t e x t S t y l e    t e x t S i z e    g r a v i t y    p a d d i n g L e f t   
+ s i n g l e L i n e    a n d r o i d   * h t t p : / / s c h e m a s . a n d r o i d . c o m / a p k / r e s / a n d r o i d        L i n e a r L a y o u t    T e x t V i e w   � ,   � � � � � � � � ]        ����	   
+    `      ��������            
+       ����     
+      ����  ����
+      ����  ����        ����	   
+    �      ��������
+            
+      ����     
+      ����     
+      ����     
+      ����  
+ 
+      ����   
+  
+      ����  ����
+      ����  ����
+      ����  ����       ��������
+          ����	   
+           ����	   
+    �      ��������
+            
+      ����     
+      ����      
+      ����     
+      ����   
+      ����   
+  
+      ����  ����
+      ����  ����
+      ����  ����       ��������
+          ����	   
+          ��������          ����	   
+   
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1f268987-d63b-4113-891f-34fe2bc4ed58\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/modules/detect/detect_wide_deep.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/modules/detect/detect_wide_deep.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"trungdev\" />\n        <entry key=\"$PROJECT_DIR$\" value=\"trungdev\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1qQ2jfSOc3iAViVQn3zg6e3WA4Y\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/app/modules\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/modules/detect/wide_deep\" />\n      <recent name=\"$PROJECT_DIR$/modules/reverse/New folder\" />\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/app\" />\n      <recent name=\"$PROJECT_DIR$/app/modules/detect/wide_deep\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python tests.Unittests for test_def.TestDef.test_read_struct_future\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"reverse\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/app/modules/reverse\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app/modules/reverse/reverse.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for app.test.test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/app/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;app.test.test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for test.test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test.test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Unittests for test.test_def.TestDef.test_read_struct_future\" type=\"tests\" factoryName=\"Unittests\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ohmalware_backend\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/test\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\n      <option name=\"_new_target\" value=\"&quot;test.test_def.TestDef.test_read_struct_future&quot;\" />\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python tests.Unittests for test_def.TestDef.test_read_struct_future\" />\n        <item itemvalue=\"Python tests.Unittests for test.test_def.TestDef.test_read_struct_future\" />\n        <item itemvalue=\"Python tests.Unittests for test.test_def.TestDef.test_read_struct_future\" />\n        <item itemvalue=\"Python.reverse\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1f268987-d63b-4113-891f-34fe2bc4ed58\" name=\"Default Changelist\" comment=\"\" />\n      <created>1616997631472</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1616997631472</updated>\n      <workItem from=\"1616997645767\" duration=\"852000\" />\n      <workItem from=\"1617014865991\" duration=\"453000\" />\n      <workItem from=\"1617015421097\" duration=\"69000\" />\n      <workItem from=\"1617015559011\" duration=\"162000\" />\n      <workItem from=\"1617374079906\" duration=\"3000\" />\n      <workItem from=\"1617470421873\" duration=\"1222000\" />\n      <workItem from=\"1617812238733\" duration=\"3799000\" />\n      <workItem from=\"1617896438929\" duration=\"11068000\" />\n      <workItem from=\"1617959793523\" duration=\"4945000\" />\n      <workItem from=\"1617979964933\" duration=\"2086000\" />\n      <workItem from=\"1618028184104\" duration=\"2617000\" />\n      <workItem from=\"1618161996210\" duration=\"6192000\" />\n      <workItem from=\"1619022759999\" duration=\"4198000\" />\n      <workItem from=\"1619097593366\" duration=\"599000\" />\n      <workItem from=\"1619255963437\" duration=\"791000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/test/test_def.py</url>\n          <line>12</line>\n          <option name=\"timeStamp\" value=\"4\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/ohmalware_backend$Unittests_for_test_def_TestDef_test_read_struct_future.coverage\" NAME=\"Unittests for test_def.TestDef.test_read_struct_future Coverage Results\" MODIFIED=\"1618149402656\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test\" />\n    <SUITE FILE_PATH=\"coverage/ohmalware_backend$reverse.coverage\" NAME=\"reverse Coverage Results\" MODIFIED=\"1617937858567\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app/modules/reverse\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2e10b9a7503cf8919bca438c540f4718470cddd5)
+++ b/.idea/workspace.xml	(date 1619257461482)
@@ -3,7 +3,15 @@
   <component name="ChangeListManager">
     <list default="true" id="1f268987-d63b-4113-891f-34fe2bc4ed58" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+<<<<<<< HEAD
+      <change beforePath="$PROJECT_DIR$/modules/detect/detect_wide_deep.py" beforeDir="false" afterPath="$PROJECT_DIR$/modules/detect/detect_wide_deep.py" afterDir="false" />
+=======
+      <change beforePath="$PROJECT_DIR$/helper.py" beforeDir="false" afterPath="$PROJECT_DIR$/helper.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/modules/detect/detect_wide_deep.py" beforeDir="false" afterPath="$PROJECT_DIR$/modules/detect/detect_wide_deep.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/store.py" beforeDir="false" afterPath="$PROJECT_DIR$/store.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/test/test_def.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/test_def.py" afterDir="false" />
+>>>>>>> 7dbfb7e4584131d628470b1c41704a78f2647a4b
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -60,6 +68,28 @@
     </key>
   </component>
   <component name="RunManager" selected="Python tests.Unittests for test_def.TestDef.test_read_struct_future">
+    <configuration name="detect_wide_deep" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="ohmalware_backend" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modules/detect" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/modules/detect/detect_wide_deep.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="ohmalware_backend" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -167,6 +197,7 @@
     <recent_temporary>
       <list>
         <item itemvalue="Python tests.Unittests for test_def.TestDef.test_read_struct_future" />
+        <item itemvalue="Python.detect_wide_deep" />
         <item itemvalue="Python tests.Unittests for test.test_def.TestDef.test_read_struct_future" />
         <item itemvalue="Python tests.Unittests for test.test_def.TestDef.test_read_struct_future" />
         <item itemvalue="Python.reverse" />
@@ -219,14 +250,15 @@
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/test/test_def.py</url>
-          <line>12</line>
+          <line>14</line>
           <option name="timeStamp" value="4" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/ohmalware_backend$Unittests_for_test_def_TestDef_test_read_struct_future.coverage" NAME="Unittests for test_def.TestDef.test_read_struct_future Coverage Results" MODIFIED="1618149402656" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test" />
     <SUITE FILE_PATH="coverage/ohmalware_backend$reverse.coverage" NAME="reverse Coverage Results" MODIFIED="1617937858567" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/modules/reverse" />
+    <SUITE FILE_PATH="coverage/ohmalware_backend$Unittests_for_test_def_TestDef_test_read_struct_future.coverage" NAME="Unittests for test_def.TestDef.test_read_struct_future Coverage Results" MODIFIED="1618192715308" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test" />
+    <SUITE FILE_PATH="coverage/ohmalware_backend$detect_wide_deep.coverage" NAME="detect_wide_deep Coverage Results" MODIFIED="1618192683490" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/modules/detect" />
   </component>
 </project>
\ No newline at end of file
Index: modules/reverse/templeApks/res/layout/contact_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/templeApks/res/layout/contact_list.xml b/modules/reverse/templeApks/res/layout/contact_list.xml
new file mode 100644
--- /dev/null	(date 1619257461441)
+++ b/modules/reverse/templeApks/res/layout/contact_list.xml	(date 1619257461441)
@@ -0,0 +1,4 @@
+  �    X  
+           D              6   T   l   t   �   �   �   �    o r i e n t a t i o n    l a y o u t _ w i d t h   
+ l a y o u t _ h e i g h t   
+ b a c k g r o u n d    i d    a n d r o i d   * h t t p : / / s c h e m a s . a n d r o i d . c o m / a p k / r e s / a n d r o i d        L i n e a r L a y o u t    L i s t V i e w     �    � � � � �         ����       t      ��������                   ����           ����          ����  ����      ����  ���� `      ��������	                  ����         ����  ����      ����  ����       ��������	          ��������          ����      
\ No newline at end of file
Index: modules/reverse/templeApks/res/layout/contact_editor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/reverse/templeApks/res/layout/contact_editor.xml b/modules/reverse/templeApks/res/layout/contact_editor.xml
new file mode 100644
--- /dev/null	(date 1619257461441)
+++ b/modules/reverse/templeApks/res/layout/contact_editor.xml	(date 1619257461441)
@@ -0,0 +1,14 @@
+  	    �             X              6   T   l   t   �   �   �   �       2  F  Z   o r i e n t a t i o n    l a y o u t _ w i d t h   
+ l a y o u t _ h e i g h t   
+ b a c k g r o u n d    i d    t e x t    t e x t S i z e    a n d r o i d   * h t t p : / / s c h e m a s . a n d r o i d . c o m / a p k / r e s / a n d r o i d        L i n e a r L a y o u t    T a b l e R o w    T e x t V i e w    E d i t T e x t    B u t t o n     � $   � � � � � O�         ����       t      ��������
+                   ����           ����          ����  ����      ����  ���� `      ��������                  ����          ����  ����      ����  ���� �      ��������                  ����           ����         ����  ����      ����  ����      ����       
+   ��������    `      ��������
+                  ����         ����  ����      ����  ����       ��������
+       
+   ��������    `      ��������                  ����         ����  ����      ����  ���� �      ��������                  ����           ����         ����  ����      ����  ����      ����          ��������    `      ��������
+                  ����         ����  ����      ����  ����       ��������
+          ��������    `      ��������                  ����         ����  ����      ����  ���� �      ��������                  ����           ����         ����  ����      ����  ����      ����          ��������    `      ��������
+                  ����         ����  ����      ����  ����       ��������
+          ��������    `      ��������                  ����  	       ����  ����      ����  ���� �   !   ��������                  ����           ����  
+       ����  ����      ����  ����      ����       #   ��������    �   $   ��������                  ����           ����         ����  ����      ����  ����      ����       &   ��������       '   ��������       (   ��������
+       (   ����      
\ No newline at end of file
